# Generated by Django 4.2.1 on 2023-06-13 02:16

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('ecommerce', '0012_alter_medio_pago_id_medio_pago'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='factura',
            options={'verbose_name': 'Factura de la compra', 'verbose_name_plural': 'Facturas'},
        ),
        migrations.AlterModelOptions(
            name='medio_pago',
            options={'verbose_name': 'Medio de pago seleccionado o disponible', 'verbose_name_plural': 'Medios de pago'},
        ),
        migrations.AlterModelOptions(
            name='numeros_rifas',
            options={'verbose_name': 'NÃºmeros de rifas', 'verbose_name_plural': 'Numeros_Rifas'},
        ),
        migrations.AlterModelOptions(
            name='provincia',
            options={'verbose_name': 'Provincia del usuario', 'verbose_name_plural': 'Provincias'},
        ),
        migrations.AlterModelOptions(
            name='rifa',
            options={'verbose_name': 'Rifas creadas', 'verbose_name_plural': 'Rifas'},
        ),
        migrations.AlterModelOptions(
            name='usuario',
            options={'verbose_name': 'Usuarios registrados', 'verbose_name_plural': 'Usuarios'},
        ),
        migrations.AlterModelOptions(
            name='venta',
            options={'verbose_name': 'Venta realizada', 'verbose_name_plural': 'Ventas'},
        ),
        migrations.AlterModelTable(
            name='factura',
            table='Factura',
        ),
        migrations.AlterModelTable(
            name='medio_pago',
            table='Medio_Pago',
        ),
        migrations.AlterModelTable(
            name='numeros_rifas',
            table='Numeros_Rifas',
        ),
        migrations.AlterModelTable(
            name='provincia',
            table='Provincia',
        ),
        migrations.AlterModelTable(
            name='rifa',
            table='Rifa',
        ),
        migrations.AlterModelTable(
            name='usuario',
            table='Usuario',
        ),
        migrations.AlterModelTable(
            name='venta',
            table='Venta',
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=150, unique=True)),
                ('DNI', models.CharField(max_length=50)),
                ('nombre', models.CharField(max_length=50)),
                ('apellido', models.CharField(max_length=50)),
                ('telefono', models.CharField(max_length=15)),
                ('provincia', models.CharField(max_length=15)),
                ('ciudad', models.CharField(max_length=45)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
